package com.smart.mango.web.inside.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.smart.mango.web.common.service.ICommonService;
import com.smart.mango.web.inside.service.IClientService;

@Controller
public class ClientController {
	@Autowired
	public IClientService iClientService;
	
	@Autowired
	public ICommonService iCommonService;
	
	@RequestMapping(value = "/clientList")
	public ModelAndView clientList(HttpSession session, ModelAndView mav) {
		mav.setViewName("client/clientList");

		return mav;
	}
	
	@RequestMapping(value = "/clientAdd")
	public ModelAndView clientAdd(HttpSession session, ModelAndView mav) {
		mav.setViewName("client/clientAdd");

		return mav;
	}
//	카테고리 가져오기
	@RequestMapping(value = "/clientAddSetAjax",
			method = RequestMethod.POST,
			produces = "test/json;charset=UTF-8")
	@ResponseBody 
	public String clientAddSetAjax(@RequestParam HashMap<String, String>params,HttpSession session, ModelAndView modelAndView) throws Throwable{
		ObjectMapper mapper= new ObjectMapper();
		Map<String,Object> modelMap = new HashMap<String,Object>();
		params.put("bm_NO",String.valueOf(session.getAttribute("sBmNo")));
		List<HashMap<String,String>> grade = iClientService.getClientGrade(params);
		
		modelMap.put("grade",grade);
		return mapper.writeValueAsString(modelMap);
	}
	//	고객 등록
	@RequestMapping(value = "/clientWriteAjax",
			method = RequestMethod.POST,
			produces = "test/json;charset=UTF-8")
	@ResponseBody 
	public String clientWriteAjax(@RequestParam HashMap<String, String>params, ModelAndView modelAndView) throws Throwable{
		ObjectMapper mapper= new ObjectMapper();
		Map<String,Object> modelMap = new HashMap<String,Object>();
		try {
			System.out.println("params =>" +params);
			/* 고객등록 */
			iClientService.clientinsertData(params);
			modelMap.put("res","SUCCESS");
		} catch (Exception e) {
			e.printStackTrace();
			modelMap.put("res", "Failed");
		}
		return mapper.writeValueAsString(modelMap);
	}
	
}
