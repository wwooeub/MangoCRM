<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bssDet">
<select id="getFirst" parameterType="hashmap" resultType="hashmap">
	SELECT CHN_NO, PROG_NO
	FROM BSS_CHN
	WHERE CHN_NO = #{chnNo}
</select>
<select id="getChn" parameterType="hashmap" resultType="hashmap">
SELECT CH.* , PR.PROG_NAME, bstype.BSS_TYPE_NAME, SALDIV.SALES_DIV_NAME, ls.LEAD_STAT_NAME, 
cl.CLIENT_NAME, cl.CLIENT_PH, cl.CLIENT_FAX, cl.CLIENT_EMAIL, cp.COMP_NAME, cp.COMP_PH, ei.EMP_NAME 
, ei.EMP_PHONE, T.TEAM_NAME, T.TEAM_CALL 
FROM BSS_CHN CH INNER JOIN BSS_PROG PR 
                        ON CH.PROG_NO = PR.PROG_NO 
                LEFT OUTER JOIN BSS_TYPE BSTYPE 
                        ON CH.BSS_TYPE_NO = BSTYPE.BSS_TYPE_NO 
                LEFT OUTER JOIN BSS_SALES_DIV SALDIV 
                        ON CH.SALES_DIV_NO = SALDIV.SALES_DIV_NO 
                INNER JOIN LEAD LD 
                        ON ch.lead_no = ld.lead_no 
                INNER JOIN LEAD_STAT LS 
                        ON ld.lead_stat_no = ls.lead_stat_no 
                INNER JOIN CLIENT CL 
                        ON ld.client_no = cl.client_no 
                INNER JOIN COMP CP 
                        ON cl.comp_no = cp.comp_no 
                INNER JOIN EMP_INFO EI 
                        ON cl.emp_no = EI.EMP_NO 
                INNER JOIN TEAM T 
                        ON EI.TEAM_NO = T.TEAM_NO 
WHERE ch.CHN_NO = #{chnNo}
</select>
<select id="getBssType" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM BSS_TYPE
</select>
<select id="getBssSalesDiv" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM BSS_SALES_DIV
</select>
<select id="getEmpList" parameterType="hashmap" resultType="hashmap">
		SELECT *
		FROM ( 	SELECT E.EMP_NO, D.DEPART_NAME, T.TEAM_NAME, E.EMP_NAME, EP.EMP_POSI_NAME AS POSI_NAME, E.EMP_EMAIL, D.DEPART_NO,
				   	   ROW_NUMBER() OVER(ORDER BY E.EMP_NO DESC) AS RNUM
			   	FROM EMP_INFO E INNER JOIN TEAM T
			   					ON E.TEAM_NO = T.TEAM_NO
			   					INNER JOIN DEPART D
			   					ON T.DEPART_NO = D.DEPART_NO
			   					INNER JOIN EMP_POSI EP
			   					ON E.EMP_POSI_NO = EP.EMP_POSI_NO
			   	WHERE E.EMP_RESIGN_DATE IS NULL
			   	<if test="searchTxt != null and searchTxt != ''">
			   		AND E.EMP_NO LIKE '%' || #{searchTxt} || '%'
					OR D.DEPART_NAME LIKE '%' || #{searchTxt} || '%'
					OR T.TEAM_NAME LIKE '%' || #{searchTxt} || '%'
					OR E.EMP_NAME LIKE '%' || #{searchTxt} || '%'
					OR EP.EMP_POSI_NAME LIKE '%' || #{searchTxt} || '%'
				</if>
				ORDER BY E.EMP_NO DESC
		) SQ
		WHERE SQ.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="getEmpCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM EMP_INFO E INNER JOIN TEAM T
			   			ON E.TEAM_NO = T.TEAM_NO
			   			INNER JOIN DEPART D
			   			ON T.DEPART_NO = D.DEPART_NO
			   			INNER JOIN EMP_POSI EP
			   			ON E.EMP_POSI_NO = EP.EMP_POSI_NO
		WHERE E.EMP_RESIGN_DATE IS NULL
		<if test="searchTxt != null and searchTxt != ''">
			AND E.EMP_NO LIKE '%' || #{searchTxt} || '%'
			OR D.DEPART_NAME LIKE '%' || #{searchTxt} || '%'
			OR T.TEAM_NAME LIKE '%' || #{searchTxt} || '%'
			OR E.EMP_NAME LIKE '%' || #{searchTxt} || '%'
			OR EP.EMP_POSI_NAME LIKE '%' || #{searchTxt} || '%'
		</if>
	</select>
	<select id="getSelectProdDiv" parameterType="hashmap" resultType="hashmap">
		SELECT DIV_NO
		FROM PROD
		GROUP BY DIV_NO
	</select>
	<select id="getSelectProdType" parameterType="hashmap" resultType="hashmap">
		SELECT TYPE_NO
		FROM PROD
		GROUP BY TYPE_NO
	</select>
	<select id="getProdDefaultList" parameterType="hashmap" resultType="hashmap">
	SELECT *
	FROM(
		SELECT P.*, ROW_NUMBER()OVER(ORDER BY P.PROD_NO) AS RNUM
		FROM (
		SELECT P.PROD_NO, P.DIV_NO, P.TYPE_NO, P.PROD_NAME AS NAME, G.GOODS_NO AS NO, G.GOODS_CODE AS CODE, G.GOODS_PRICE AS PRICE, G.GOODS_SIZE AS SIZ
		FROM PROD P INNER JOIN GOODS G
		                    ON P.PROD_NO = G.PROD_NO
		UNION
		SELECT P.PROD_NO, P.DIV_NO, P.TYPE_NO, P.PROD_NAME AS NAME, S.SERVICE_NO AS NO, S.SERVICE_CODE AS CODE,S.SERVICE_PRICE + S.INSTALL_PRICE AS PRICE, S.SERVICE_PERIOD AS SIZ
		FROM PROD P INNER JOIN SERVICE S
		                    ON P.PROD_NO = S.PROD_NO
		ORDER BY TYPE_NO ASC
		                    ) P
		WHERE 1=1
			<if test="type_name neq 0">
				AND TYPE_NO = #{type_name}
		</if>
		<if test="div_name neq 0">
				AND DIV_NO = #{div_name}
		</if>
			<if test="searchTxt != null and searchTxt != ''">
		AND NAME LIKE '%' || #{searchTxt} || '%'
			OR CODE LIKE '%' || #{searchTxt} || '%'
		</if>
		)
		WHERE RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	<select id="getProdDefaultListCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*)
		FROM (
		SELECT P.PROD_NO, P.DIV_NO, P.TYPE_NO, P.PROD_NAME AS NAME, G.GOODS_NO AS NO, G.GOODS_CODE AS CODE, G.GOODS_PRICE AS PRICE, G.GOODS_SIZE AS SIZ
		FROM PROD P INNER JOIN GOODS G
		                    ON P.PROD_NO = G.PROD_NO
		UNION
		SELECT P.PROD_NO, P.DIV_NO, P.TYPE_NO, P.PROD_NAME AS NAME, S.SERVICE_NO AS NO, S.SERVICE_CODE AS CODE,S.SERVICE_PRICE + S.INSTALL_PRICE AS PRICE, S.SERVICE_PERIOD AS SIZ
		FROM PROD P INNER JOIN SERVICE S
		                    ON P.PROD_NO = S.PROD_NO
		ORDER BY TYPE_NO ASC
		                    )
		WHERE 1=1
			<if test="type_name neq 0">
		AND TYPE_NO = #{type_name}
		</if>
		<if test="div_name neq 0">
		AND DIV_NO = #{div_name}
		</if>
		<if test="searchTxt != null and searchTxt != ''">
		AND NAME LIKE '%' || #{searchTxt} || '%'
			OR CODE LIKE '%' || #{searchTxt} || '%'
		</if>
	</select>
	<update id="updateProg" parameterType="hashmap">
	<if test="selectChk eq 1">
		UPDATE BSS_CHN SET PROG_NO = PROG_NO + 1
		WHERE CHN_NO = #{chnNo}	
	</if>
	<if test="selectChk eq 2">
		UPDATE BSS_CHN SET PROG_NO = 6
		WHERE CHN_NO = #{chnNo}
	</if>	
	<if test="selectChk eq 3">
		UPDATE BSS_CHN SET PROG_NO = 5
		WHERE CHN_NO = #{chnNo}
	</if>
	</update> 
	<select id="getProdNowListCnt" parameterType="HashMap" resultType="Integer">
		SELECT COUNT(*)
		FROM(
		SELECT NW.*, ROW_NUMBER()OVER(ORDER BY CHN_NO) AS RNUM
		FROM(
		SELECT CP.CHN_NO, P.PROD_NO, P.DIV_NO, P.TYPE_NO, P.PROD_NAME AS NAME, G.GOODS_CODE AS CODE, G.GOODS_PRICE AS PRICE, G.GOODS_SIZE AS SIZ
		FROM BSS_CHN BC INNER JOIN CHN_PROD CP
		                        ON BC.CHN_NO = CP.CHN_NO
		                INNER JOIN PROD P
		                        ON CP.PROD_NO = P.PROD_NO
		                INNER JOIN GOODS G
		                        ON P.PROD_NO = G.PROD_NO
		UNION
		SELECT CP.CHN_NO, P.PROD_NO, P.DIV_NO, P.TYPE_NO, P.PROD_NAME AS NAME, S.SERVICE_CODE AS CODE, S.SERVICE_PRICE + S.INSTALL_PRICE AS PRICE, S.SERVICE_PERIOD AS SIZ
		FROM BSS_CHN BC INNER JOIN CHN_PROD CP
		                        ON BC.CHN_NO = CP.CHN_NO
		                INNER JOIN PROD P
		                        ON CP.PROD_NO = P.PROD_NO
		                INNER JOIN SERVICE S
		                        ON P.PROD_NO = S.PROD_NO
		ORDER BY TYPE_NO
		) NW
		WHERE CHN_NO = #{chnNo}
		)
		WHERE 1=1
	</select>
	<select id="getProdNowList" parameterType="HashMap" resultType="HashMap">
		SELECT *
		FROM(
		SELECT NW.*, ROW_NUMBER()OVER(ORDER BY CHN_NO) AS RNUM
		FROM(
		SELECT CP.CHN_NO, P.PROD_NO, P.DIV_NO, P.TYPE_NO,CP.CNT, P.PROD_NAME AS NAME, G.GOODS_CODE AS CODE, G.GOODS_PRICE AS PRICE, G.GOODS_SIZE AS SIZ
		FROM BSS_CHN BC INNER JOIN CHN_PROD CP
		                        ON BC.CHN_NO = CP.CHN_NO
		                INNER JOIN PROD P
		                        ON CP.PROD_NO = P.PROD_NO
		                INNER JOIN GOODS G
		                        ON P.PROD_NO = G.PROD_NO
		UNION
		SELECT CP.CHN_NO, P.PROD_NO, P.DIV_NO, P.TYPE_NO,CP.CNT, P.PROD_NAME AS NAME, S.SERVICE_CODE AS CODE, S.SERVICE_PRICE + S.INSTALL_PRICE AS PRICE, S.SERVICE_PERIOD AS SIZ
		FROM BSS_CHN BC INNER JOIN CHN_PROD CP
		                        ON BC.CHN_NO = CP.CHN_NO
		                INNER JOIN PROD P
		                        ON CP.PROD_NO = P.PROD_NO
		                INNER JOIN SERVICE S
		                        ON P.PROD_NO = S.PROD_NO
		ORDER BY TYPE_NO
		) NW
		WHERE CHN_NO = #{chnNo}
		)
		WHERE 1=1
				AND RNUM BETWEEN #{startCnt} AND #{endCnt}
		
	</select>
	<insert id="updateNowProd" parameterType="Hashmap">
		INSERT INTO CHN_PROD(PROD_NO, CHN_NO, CNT, PRICE)
		VALUES(#{prodDefaultNo}, #{chnNo}, '1', #{getProdPrice})
	</insert>
	<delete id="deleteNowProd" parameterType="Hashmap">
		DELETE FROM CHN_PROD
		WHERE CHN_NO = #{chnNo} AND PROD_NO = #{prodNowNo}
	</delete>
	
	<!-- 의견 목록 가져오기 -->
	<select id="getBssOpin" parameterType="hashmap"
		resultType="hashmap">
		SELECT BS.OPIN_NO AS OPIN_NO, E.EMP_NAME, E.EMP_NO,
		EP.EMP_POSI_NAME AS POSI_NAME,
		BS.BSS_OPIN_CON AS OPIN_CON, TO_CHAR(BS.BSS_OPIN_DATE, 'YYYY-MM-DD HH24:MI:SS') AS
		OPIN_DATE
		FROM BSS_OPIN BS INNER JOIN EMP_INFO E
		ON BS.EMP_NO = E.EMP_NO
		INNER JOIN EMP_POSI EP
		ON E.EMP_POSI_NO = EP.EMP_POSI_NO
		AND BS.BSS_OPIN_DEL_YN = 1
		WHERE BS.CHN_NO = #{chnNo}
		ORDER BY
		BS.OPIN_NO DESC
	</select>
	
	<!-- 의견 목록 페이징 -->
	<select id="getBssOpinCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM BSS_OPIN
		WHERE CHN_NO = #{chnNo}
		AND BSS_OPIN_DEL_YN = 1
	</select>
	
	<!-- 의견 작성 -->
	<insert id="insertBssOpin" parameterType="hashmap">
		INSERT INTO BSS_OPIN(OPIN_NO, CHN_NO, EMP_NO, BSS_OPIN_CON)
		VALUES ( BSS_OPIN_SEQ.NEXTVAL, #{chnNo}, #{empNo}, #{opin_txt})
	</insert>
	
	<!-- 의견 삭제 -->
	<update id="delBssOpin" parameterType="hashmap">
		UPDATE BSS_OPIN
		SET BSS_OPIN_DEL_YN = 0
		WHERE OPIN_NO = #{opin_no}
	</update>
	
	<!-- 활동일정 목록 가져오기 -->
	<select id="getBssSche" parameterType="hashmap" resultType="hashmap">
	SELECT S.SCHE_NO, TO_CHAR(S.SCHE_SDATE,'YY / MM / DD') AS SDATE, S.SCHE_CON, S.SCHE_RES,
                TO_CHAR(S.SCHE_EDATE,'YY / MM / DD') AS EDATE, S.SCHE_IMPORTANCE AS SC_IP, CL.CLIENT_NAME,
                CL.CLIENT_POSI_NAME AS CLIENT_PNM,
                EI.EMP_NAME, EP.EMP_POSI_NAME AS EMP_PNM, CC2.CODE_S_CATE, CC2.CODE_NAME
        FROM SCHE S INNER JOIN SCHE_CHN SC
                    ON S.SCHE_NO = SC.SCHE_NO
                    INNER JOIN BSS_CHN BC
                    ON SC.CHN_NO = BC.CHN_NO
                    INNER JOIN LEAD L
                    ON BC.LEAD_NO = L.LEAD_NO
                    INNER JOIN CLIENT CL
                    ON L.CLIENT_NO = CL.CLIENT_NO
                    INNER JOIN EMP_INFO EI
                    ON L.EMP_NO = EI.EMP_NO
                    INNER JOIN EMP_POSI EP
                    ON EI.EMP_POSI_NO = EP.EMP_POSI_NO
                    INNER JOIN COMMON_CODE CC1
		                    ON S.SCHE_DIV_NO = CC1.CODE_S_CATE
		                    AND CC1.CODE_L_CATE = 2
		            INNER JOIN COMMON_CODE CC2
		                    ON S.SCHE_ACTI_NO = CC2.CODE_S_CATE
		                    AND CC2.CODE_L_CATE = 3
		WHERE SC.CHN_NO = #{chnNo}
		AND ( ${filter} )
		ORDER BY S.SCHE_DATE DESC
	</select>
</mapper>