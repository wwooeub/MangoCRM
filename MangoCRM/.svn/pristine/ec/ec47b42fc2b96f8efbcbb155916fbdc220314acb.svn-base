<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sche">
	
	
	<!--////////////////////////////// 일정 등록,수정,세부사항  /////////////////////////////////-->
	
	<!-- 의견 등록 -->
	<insert id="insertOpin" parameterType="hashmap">
		INSERT INTO SCHE_OPIN(SCHE_OPIN_NO, EMP_NO, SCHE_NO, SCHE_OPIN_CON)
		VALUES (SCHE_OPIN_SEQ.NEXTVAL, #{sEmpNo}, #{sche_no} , #{sche_opin_con})
	</insert>
	
	<!-- 의견 삭제 -->
	<update id="deleteOpin" parameterType="hashmap">
		UPDATE SCHE_OPIN SET SCHE_OPIN_DEL_YN = 0
		WHERE EMP_NO =  #{sEmpNo} AND SCHE_OPIN_NO = #{opin_no}
	</update>
	
	<!-- 의견 수 조회 -->
	<select id="getOpinCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*)
		FROM SCHE_OPIN 
		WHERE SCHE_NO = #{sche_no} AND SCHE_OPIN_DEL_YN = 1
	</select>
	
	<!-- 의견 조회 -->
	<select id="getOpinList" parameterType="hashmap" resultType="hashmap">
		SELECT SO.SCHE_OPIN_NO,SO.EMP_NO, EI.EMP_NAME || ' ' || EP.EMP_POSI_NAME AS EMP
        , TO_CHAR(SO.SCHE_DATE,'YYYY-MM-DD HH24:MI:SS') AS SCHE_DATE,SO.SCHE_OPIN_CON
		FROM SCHE_OPIN SO INNER JOIN EMP_INFO EI
                          ON SO.EMP_NO = EI.EMP_NO
                  INNER JOIN EMP_POSI EP
                          ON EI.EMP_POSI_NO = EP.EMP_POSI_NO
		WHERE SO.SCHE_NO = #{sche_no} AND SO.SCHE_OPIN_DEL_YN = 1
		ORDER BY SO.SCHE_OPIN_NO DESC
	</select>
	
	<!-- list Test용 -->
	<select id="scheList" parameterType="hashmap" resultType="hashmap">
		SELECT SC.SCHE_NO, SC.SCHE_DIV_NO, SC.SCHE_ACTI_NO,CL.CLIENT_NAME ,SC.SCHE_IMPORTANCE, EI.EMP_NAME || ' ' || EP.EMP_POSI_NAME AS NAME
		FROM SCHE SC INNER JOIN EMP_INFO EI
                  ON SC.EMP_NO = EI.EMP_NO
          INNER JOIN EMP_POSI EP
                  ON EI.EMP_POSI_NO = EP.EMP_POSI_NO
         LEFT OUTER JOIN SCHE_CLIENT_INFO SCI
                      ON SC.SCHE_NO = SCI.SCHE_NO
         LEFT OUTER JOIN CLIENT CL
                      ON SCI.CLIENT_NO = CL.CLIENT_NO 
         WHERE SC.DEL_YN = 1
        ORDER BY SC.SCHE_NO DESC
	</select>
	
	<!-- 일정구분 리스트 출력 -->
	<select id="getRadioList" parameterType="hashmap" resultType="hashmap">
	SELECT CODE_S_CATE, CODE_NAME
	FROM COMMON_CODE 
	WHERE CODE_L_CATE = 2
	</select>
	
	<!-- 활동분류 리스트 출력 -->
	<select id="getOptionList" parameterType="hashmap" resultType="hashmap">
	SELECT CODE_S_CATE, CODE_NAME
	FROM COMMON_CODE 
	WHERE CODE_L_CATE = 3
	</select>
	
	<!-- 고객 검색 Cnt -->
	<select id = "getClientCnt" parameterType = "hashmap" resultType = "Integer">
		SELECT COUNT(*)
		FROM(SELECT CLIENT_NO , CLIENT_NAME , COMP_NAME
     		 FROM CLIENT C INNER JOIN COMP C2
               				       ON C.COMP_NO = C2.COMP_NO
			<if test="searchTxt != null and searchTxt != ''">
        	AND CLIENT_NAME LIKE'%' || #{searchTxt} || '%'
        	</if>
        	) A
	</select>
	
	<!-- 고객 검색 고객리스트-->
	<select id = "getClientList" parameterType = "hashmap" resultType = "hashmap">
		SELECT *
		FROM(SELECT CLIENT_NO , CLIENT_NAME , COMP_NAME,
             ROW_NUMBER() OVER(ORDER BY CLIENT_NO ASC) AS RNUM
     		 FROM CLIENT C INNER JOIN COMP C2
               		               ON C.COMP_NO = C2.COMP_NO) Z
            WHERE Z.RNUM BETWEEN 1 AND 10
        <if test="searchTxt != null and searchTxt != ''">
        	AND CLIENT_NAME LIKE'%' || #{searchTxt} || '%'
        </if>
	</select>
	
	<!-- 일정 데이터 출력-->
	<select id="getScheData" parameterType="hashmap" resultType="hashmap">
	SELECT CC.CODE_NAME AS CN ,CD.CODE_NAME AS DN, '(' || SUBSTR(SCHE_PLACE,'0','5') || ')' || REPLACE(SUBSTR(SCHE_PLACE,'6'),',',' ') AS ADDR, SCHE_CON, SCHE_RES ,  TO_CHAR(SCHE_SDATE,'YYYY-MM-DD') AS SDATE, TO_CHAR(SCHE_SDATE,'HH24:MI:SS') AS STIME,TO_CHAR(SCHE_EDATE,'YYYY-MM-DD') AS EDATE,TO_CHAR(SCHE_EDATE,'HH24:MI:SS') AS ETIME, SCHE_IMPORTANCE
	FROM SCHE SC INNER JOIN COMMON_CODE CC
                         ON SC.SCHE_DIV_NO = CC.CODE_S_CATE
                         AND CC.CODE_L_CATE = 2
                 INNER JOIN COMMON_CODE CD
                         ON SCHE_ACTI_NO = CD.CODE_S_CATE
                         AND CD.CODE_L_CATE = 3
	WHERE SCHE_NO = #{sche_no}
	</select>
	
	<!-- 일정 고객 데이터 출력 -->
	<select id="getCiData" parameterType="hashmap" resultType="hashmap">
	SELECT SCI.SCHE_CI_PARTICIPANT, CI.CLIENT_NAME, CP.COMP_NAME
	FROM SCHE_CLIENT_INFO SCI LEFT OUTER JOIN CLIENT CI
                                       ON SCI.CLIENT_NO = CI.CLIENT_NO
                          LEFT OUTER JOIN COMP CP
                                       ON CI.COMP_NO = CP.COMP_NO
	WHERE SCI.SCHE_NO = #{sche_no}
	</select>
	
	<!--////////////////////////////// 일정 등록,수정,세부사항 end  /////////////////////////////////-->
	
	<!--/////////////////////////////////////////// 일정 등록  /////////////////////////////////////-->
	
	<!-- 일정 등록  -->
	<insert id="insertSche" parameterType="hashmap">
		INSERT INTO SCHE(SCHE_NO, SCHE_DIV_NO, SCHE_ACTI_NO, SCHE_PLACE, SCHE_CON, SCHE_RES, SCHE_SDATE, 
		<if test="sche_edate neq null and sche_edate neq ''">
		SCHE_EDATE, 
		</if>
		SCHE_IMPORTANCE, EMP_NO)  
		VALUES (SCHE_SEQ.NEXTVAL, #{sche_div_no}, #{scheActiNo}
		<choose>
		<when test="sche_postcode != '' or sche_addr != '' or sche_det_addr != ''">, 	#{sche_postcode} || ',' ||#{sche_addr} || ',' || #{sche_det_addr}</when>
		<otherwise>, NULL</otherwise>
		</choose> 
		,#{sche_con} 
		<choose><when test="sche_res != ''">, #{sche_res}</when><otherwise>, NULL</otherwise></choose>
				,TO_DATE(#{sche_sdate} || ' ' || #{sche_stime}, 'YYYY-MM-DD HH24:MI:SS'),
				<if test="sche_edate neq null and sche_edate neq ''">
				TO_DATE(#{sche_edate} || ' ' || #{sche_etime}, 'YYYY-MM-DD HH24:MI:SS'),
				</if>
				 #{scheImportance}, #{sEmpNo})
	</insert>
	
	<!-- 일정고객테이블에 넣을 일정 번호  -->
	<select id="getScheNo" parameterType="hashmap" resultType="Integer">
		SELECT SCHE_NO
		FROM(
		SELECT SCHE_NO,RANK() OVER(ORDER BY SCHE_NO DESC) AS RNK
		FROM SCHE
		)
		WHERE RNK = 1
	</select>
	
	<!-- 일정 고객 등록 -->
	<insert id="insertScheClient" parameterType="hashmap">
		INSERT INTO SCHE_CLIENT_INFO(SCHE_CI_NO,SCHE_NO,CLIENT_NO,SCHE_CI_PARTICIPANT)
		VALUES (SCHE_CI_SEQ.NEXTVAL,#{ScheNo}
		<choose><when test="cNo != ''">, #{cNo}</when><otherwise>, NULL</otherwise></choose>
		<choose><when test="sche_ci_participant != ''">, #{sche_ci_participant}</when><otherwise>, NULL</otherwise></choose>)
	</insert>
	
	<!--////////////////////////////////////// 일정 등록end  ////////////////////////////////////-->
	
	<!-- ///////////////////////////////////////일정 세부사항///////////////////////////////////  -->
	
	
	
	<!-- ///////////////////////////////////////일정 세부사항 end///////////////////////////////// -->
	
</mapper>